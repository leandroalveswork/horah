@page "/colaborador"

@using Domain.Design.Patterns.Strategy
@using Domain.Design.Patterns.Strategy.Md
@using Domain.Models
@using Domain.Interfaces.Accessor
@using Domain.Interfaces.Repository
@using Domain.Interfaces.Business
@using Domain.Models.Bsn.Common
@using Domain.Models.Bsn.Autorizacao
@using Domain.Models.Bsn.Colaborador
@using Domain.Models.ViewModels
@using Microsoft.AspNetCore.Mvc.Rendering
@inject IColaboradorLogadoAccessor ColaboradorLogadoAccessor
@inject IFuncionalidadeRepository FuncionalidadeRepository
@inject IAutorizacaoBusiness AutorizacaoBusiness
@inject IColaboradorBusiness ColaboradorBusiness
@inject NavigationManager UriHelper

<PageTitle>Conta</PageTitle>

<div class='d-flex flex-column'>
    <h1>Colaborador Index</h1>
    <div class='row g-0 w-100 d-flex'>
        <div class='d-flex flex-column col-12 col-sm-6 col-md-4 px-2 pt-3'>
            <label>Nome</label>
            <input type='text' @bind="nome" />
        </div>
        <div class='d-flex flex-column col-12 col-sm-6 col-md-4 px-2 pt-3'>
            <label>Login</label>
            <input type='text' @bind="login" />
        </div>
        <div class='d-flex flex-column col-12 col-sm-6 col-md-4 px-2 pt-3'>
            <label>Ativo</label>
            @if (dropdownDoEstaAtivo != null)
            {
                <select @bind="estaAtivoSelecionado">
                    @foreach (var opcaoDeEstaAtivo in dropdownDoEstaAtivo)
                    {
                        <option value="@opcaoDeEstaAtivo.Value">@opcaoDeEstaAtivo.Text</option>
                    }
                </select>
            }
        </div>
        <div class='d-flex flex-column col-12 px-2 pt-3'>
            <button class='p-2 border-non-important border-2 border-hrh-1 hrh-bg-inherit-non-important h-100 text-hrh-1-non-important onhover-bg-hrh-1-non-important onhover-text-hrh-fundo-non-important' @onclick="SubmitPesquisarAsync" >
                <span class='oi oi-search pe-2'></span>Pesquisar
            </button>
        </div>
    </div>
    <h1 class='pt-3'>Colaboradores</h1>
    <div class='row g-0 w-100 d-flex'>
       
    </div>
</div>

@code {
    [CascadingParameter(Name = "SetRefColaboradorAsync")]
    public EventCallback<BsnColaboradorLogado> SetRefColaboradorLogadoAsync { get; set; }
    [CascadingParameter(Name = "SetMensagemDeAlerta")]
    public EventCallback<DetalhesMensagemDeAlertaViewModel> SetMensagemDeAlerta { get; set; }
    [CascadingParameter(Name = "LockUI")]
    public EventCallback<string> LockUI { get; set; }
    [CascadingParameter(Name = "UnlockUI")]
    public EventCallback<string> UnlockUI { get; set; }
    private string? nome;
    private string? login;
    private string? estaAtivoSelecionado;
    private List<HrhMdItemDicBool>? dicionarioDoEstaAtivo;
    private List<SelectListItem>? dropdownDoEstaAtivo;
    private string idPesquisar = MongoId.NewMongoId;
    private BsnWrapperBase<BsnResultadoDeColaborador>? wrapperDosResultados;
    private bool deveCarregarDados = false;

    protected override void OnInitialized()
    {
        deveCarregarDados = true;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (deveCarregarDados)
        {
            nome = "";
            login = "";
            dicionarioDoEstaAtivo = HrhConverter.CriarDicionarioDeSelectNullableBool();
            dropdownDoEstaAtivo = HrhConverter.ParaListaDeItensDeDropdownDeDicionario(dicionarioDoEstaAtivo);
            estaAtivoSelecionado = dicionarioDoEstaAtivo.First(x => x.ValorLogico == true).Indice.ToString();
            deveCarregarDados = false;
            StateHasChanged();
        }
    }

    public async Task SubmitPesquisarAsync()
    {
        await LockUI.InvokeAsync(idPesquisar);
        await Task.Yield();
        var bsnPesquisa = new BsnPesquisaDeColaborador()
        {
            Nome = nome ?? "",
            Login = login ?? "",
            EstaAtivo = HrhConverter.ParaValorDeDicionarioUsandoValue(dicionarioDoEstaAtivo, estaAtivoSelecionado ?? dicionarioDoEstaAtivo.First(x => x.ValorLogico == true).Indice.ToString()),
        };
        var result = await ColaboradorBusiness.PesquisarAsync(bsnPesquisa);
        await UnlockUI.InvokeAsync(idPesquisar);
    }

    private void ClickSolicitarNovoAcesso()
    {
        UriHelper.NavigateTo("", true);
    }

    private void ClickSolicitarExclusao()
    {
        UriHelper.NavigateTo("", true);
    }
}
